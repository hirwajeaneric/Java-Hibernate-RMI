/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms.view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.*;
import java.io.*;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import sms.Model.Courses;
import sms.Model.Student;
import sms.controller.CourseDao;
import sms.controller.StudentDao;
import sms.Services.IstudentServices;

/**
 *
 * @author hirwa
 */
public class StudentRegistration extends javax.swing.JInternalFrame {

    String path = null;
    /**
     * Creates new form NewJInternalFrame
     */
    public StudentRegistration() {
        initComponents();
        updateTable();
        resetFields();
        updateCourseCombobox();
    }
    
    public void updateTable(){
        DefaultTableModel model = (DefaultTableModel) StudentTable.getModel();
        model.setRowCount(0);
        
        StudentDao stdo = new StudentDao();
        List<Student> stls = stdo.stList();
        
        for (Student st: stls){
            model.insertRow(model.getRowCount(), new Object[] {
                st.getFirstName(),
                st.getLastName(),
                st.getRegNumber(),
                st.getEmailAddress(),
                st.getPhoto(),
                st.getFaculty(),
                st.getPhonenumber(),
                st.getSemester(),
                st.getCourse(),
            });
        }
    }
    
    public void resetFields(){
        firstNameField.setText("");
        lastNameField.setText("");
        registrationNumberField.setText("");
        emailAddressField.setText("");
        imageLabel.setIcon(new ImageIcon());
        facultyComboBox.setSelectedIndex(0);
        phoneNumberField.setText("");
        semesterComboBox.setSelectedIndex(0);
        CourseComboBox.setSelectedIndex(0);
    }
    
    public void updateCourseCombobox(){
        Courses courses = new Courses();
        CourseDao crd = new CourseDao();
        List<Courses> listofnames = crd.findAll(courses);
        
        CourseComboBox.removeAllItems();
        //for(Courses course : listofnames) {
        //    System.out.println(courses.getCourseName());
        //}
        listofnames.forEach((Courses c)->{
            CourseComboBox.addItem(c.getCourseName());
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        registrationNumberField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        emailAddressField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        phoneNumberField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        facultyComboBox = new javax.swing.JComboBox<>();
        semesterComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        CourseComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        StudentDeleteButton = new javax.swing.JButton();
        StudentUpdateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        StudentResetButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        BrowsePictureButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        studentExportExcelButton = new javax.swing.JButton();
        studentExportPdfButton = new javax.swing.JButton();
        StudentUploadExcelButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Student Registration");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel1.setText("First name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Reg Number");

        jLabel4.setText("Email Address");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(registrationNumberField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailAddressField))
                .addGap(58, 58, 58))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(registrationNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel5.setText("Faculty");

        jLabel6.setText("Phone number");

        jLabel7.setText("Semester");

        facultyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Business Administration", "Education", "Information Techonoly", "Nursing", "Theology" }));

        semesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jLabel8.setText("Course");

        CourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a course" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(semesterComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phoneNumberField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facultyComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(facultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));

        StudentDeleteButton.setText("Delete");
        StudentDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDeleteButtonActionPerformed(evt);
            }
        });

        StudentUpdateButton.setText("Update");
        StudentUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentUpdateButtonActionPerformed(evt);
            }
        });

        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        StudentResetButton.setText("Reset");
        StudentResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StudentUpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StudentResetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StudentDeleteButton)
                .addGap(72, 72, 72))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(StudentUpdateButton)
                    .addComponent(StudentDeleteButton)
                    .addComponent(StudentResetButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First name", "Last name", "Reg number", "Email", "Photo", "Faculty", "Phone number", "Semester", "Course"
            }
        ));
        StudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StudentTable);

        BrowsePictureButton.setText("Browse Picture");
        BrowsePictureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowsePictureButtonActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Picture"));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Other functions"));

        studentExportExcelButton.setText("Export Excel");
        studentExportExcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentExportExcelButtonActionPerformed(evt);
            }
        });

        studentExportPdfButton.setText("Export PDF");
        studentExportPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentExportPdfButtonActionPerformed(evt);
            }
        });

        StudentUploadExcelButton.setText("Upload Excel");
        StudentUploadExcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentUploadExcelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudentUploadExcelButton)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(studentExportPdfButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(studentExportExcelButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StudentUploadExcelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(studentExportExcelButton)
                .addGap(18, 18, 18)
                .addComponent(studentExportPdfButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BrowsePictureButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(BrowsePictureButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StudentDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDeleteButtonActionPerformed
        try {
            // TODO add your handling code here:
            Student st = new Student();
            
            st.setFirstName(firstNameField.getText());
            st.setLastName(lastNameField.getText());
            st.setRegNumber(registrationNumberField.getText());
            st.setEmailAddress(emailAddressField.getText());
            st.setPhoto(path);
            st.setFaculty(facultyComboBox.getSelectedItem().toString());
            st.setPhonenumber(phoneNumberField.getText());
            st.setSemester(semesterComboBox.getSelectedItem().toString());
            st.setCourse(CourseComboBox.getSelectedItem().toString());
            
            IstudentServices stin = new StudentDao();
            Student ss = stin.delete(st);
            
            updateTable();
            resetFields();
            
            JOptionPane.showMessageDialog(this, "Student data deleted!!");
        } catch (RemoteException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StudentDeleteButtonActionPerformed

    private void StudentUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentUpdateButtonActionPerformed
        // TODO add your handling code here:
        String regnumber = registrationNumberField.getText();
        if(regnumber.length() <= 5 ){

            try {
                Student st = new Student();
                
                st.setFirstName(firstNameField.getText());
                st.setLastName(lastNameField.getText());
                st.setRegNumber(registrationNumberField.getText());
                st.setEmailAddress(emailAddressField.getText());
                st.setPhoto(path);
                st.setFaculty(facultyComboBox.getSelectedItem().toString());
                st.setPhonenumber(phoneNumberField.getText());
                st.setSemester(semesterComboBox.getSelectedItem().toString());
                st.setCourse(CourseComboBox.getSelectedItem().toString());
                
                IstudentServices stin = new StudentDao();
                Student ss = stin.update(st);
                
                updateTable();
                resetFields();
                
                JOptionPane.showMessageDialog(this, "Student data updated Successfully!!");
            } catch (RemoteException ex) {
                Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else {
            JOptionPane.showMessageDialog(null, "Reg number must be 5 digits.","Student Registration",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_StudentUpdateButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        //The following codes are for validating the id number
        String regnumber = registrationNumberField.getText();
        if(regnumber.length() <= 5 ){

            try {
                Student st = new Student();
                
                st.setFirstName(firstNameField.getText());
                st.setLastName(lastNameField.getText());
                st.setRegNumber(registrationNumberField.getText());
                st.setEmailAddress(emailAddressField.getText());
                st.setPhoto(path);
                st.setFaculty(facultyComboBox.getSelectedItem().toString());
                st.setPhonenumber(phoneNumberField.getText());
                st.setSemester(semesterComboBox.getSelectedItem().toString());
                st.setCourse(CourseComboBox.getSelectedItem().toString());
                
                IstudentServices stin = new StudentDao();
                Student ss = stin.save(st);
                //stdo.save(st);
                
                updateTable();
                resetFields();
                
                JOptionPane.showMessageDialog(this, "Student Saved Successfully!!");
            } catch (RemoteException ex) {
                Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else {
            JOptionPane.showMessageDialog(null, "Reg number must be 5 digits.","Student Registration",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void StudentResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentResetButtonActionPerformed
        // TODO add your handling code here:
        resetFields();
    }//GEN-LAST:event_StudentResetButtonActionPerformed

    private void StudentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) StudentTable.getModel();
        int row = StudentTable.getSelectedRow(); //This gives us the number of the selected row.

        //Next, We take data from that specific row and put them in the input fields.
        firstNameField.setText(model.getValueAt(row, 0).toString());
        lastNameField.setText(model.getValueAt(row, 1).toString());
        registrationNumberField.setText(model.getValueAt(row, 2).toString());
        emailAddressField.setText(model.getValueAt(row, 3).toString());

        String newpath = null;
        newpath = model.getValueAt(row, 4).toString();
        ImageIcon apicture = new ImageIcon(newpath);
        Image image = apicture.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(image));

        facultyComboBox.setSelectedItem(model.getValueAt(row, 5).toString());
        phoneNumberField.setText(model.getValueAt(row, 6).toString());
        semesterComboBox.setSelectedItem(model.getValueAt(row, 7).toString());
        CourseComboBox.setSelectedItem(model.getValueAt(row, 8).toString());
    }//GEN-LAST:event_StudentTableMouseClicked

    private void BrowsePictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowsePictureButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        if(file.showOpenDialog(this)== JFileChooser.APPROVE_OPTION){
            File photo = file.getSelectedFile();
            path = photo.getAbsolutePath();
            ImageIcon apicture = new ImageIcon(path);
            Image image = apicture.getImage().getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_BrowsePictureButtonActionPerformed

    private void studentExportExcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentExportExcelButtonActionPerformed
        FileOutputStream out = null;
        try {
            // TODO add your handling code here:
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Sample");

            //Heading
            Row heading = sheet.createRow(0);
            heading.createCell(0).setCellValue("First name");
            heading.createCell(1).setCellValue("Last name");
            heading.createCell(2).setCellValue("Reg number");
            heading.createCell(3).setCellValue("Email");
            heading.createCell(4).setCellValue("Photo");
            heading.createCell(4).setCellValue("Faculty");
            heading.createCell(5).setCellValue("Phone number");
            heading.createCell(6).setCellValue("Semester");
            heading.createCell(7).setCellValue("Courses");

            //Setting fonts and text alignment
            for (int i=0;i<=2;i++){
                CellStyle style = workbook.createCellStyle();
                HSSFFont font = workbook.createFont();
                font.setBold(true);
                font.setFontName(HSSFFont.FONT_ARIAL);

                style.setFont(font);
                style.setVerticalAlignment(VerticalAlignment.CENTER);
                heading.getCell(i).setCellStyle(style);
            }

            //Adding data to the table
            int numberOfRow=1;//We are starting on the first row.
            StudentDao std = new StudentDao();
            Student st = new Student();

            for (Student t: std.findAll(st)){
                Row row = sheet.createRow(numberOfRow);//Creating data on a row.

                Cell fname = row.createCell(0);
                fname.setCellValue(t.getFirstName());

                Cell lname = row.createCell(1);
                lname.setCellValue(t.getLastName());

                Cell regno = row.createCell(2);
                regno.setCellValue(t.getRegNumber());

                Cell email = row.createCell(3);
                email.setCellValue(t.getEmailAddress());

                Cell photo = row.createCell(4);
                photo.setCellValue(t.getPhoto());

                Cell faculty = row.createCell(5);
                faculty.setCellValue(t.getFirstName());

                Cell phone = row.createCell(6);
                phone.setCellValue(t.getLastName());

                Cell sem = row.createCell(7);
                sem.setCellValue(t.getRegNumber());

                Cell course = row.createCell(8);
                course.setCellValue(t.getEmailAddress());

                numberOfRow++;
            }

            for (int i=0; i<=7; i++){
                sheet.autoSizeColumn(i);
            }

            //Creating the excel file in the specified Path.
            out = new FileOutputStream(new File("/home/hirwa/NetBeansProjects/Student.M.S.HIBERNATE.v2/StudentReport.xlsx"));
            workbook.write(out);
            out.close();
            workbook.close();
            System.out.println("Data Writen successfully!");

            JOptionPane.showMessageDialog(this, "Successfully printed Excel file!","Student Registration", JOptionPane.INFORMATION_MESSAGE);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Can't find the file.", "Student Registration", JOptionPane.ERROR_MESSAGE);

        } catch (IOException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Can't Export the file.", "Student Registration", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_studentExportExcelButtonActionPerformed

    private void studentExportPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentExportPdfButtonActionPerformed
        try {
            // TODO add your handling code here:
            String path = "/home/hirwa/NetBeansProjects/";
            JFileChooser pdfFile = new JFileChooser();
            pdfFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int x = pdfFile.showSaveDialog(this);
            if (x == JFileChooser.APPROVE_OPTION) {
                path = pdfFile.getSelectedFile().getPath();
            }

            Document doc = new Document();
            PdfWriter.getInstance(doc, new FileOutputStream(path + "StudentPdfReport.pdf"));
            doc.open();
            PdfPTable pdfTable = new PdfPTable(8);
            //Adding headers
            pdfTable.addCell("First name");
            pdfTable.addCell("Last name");
            pdfTable.addCell("Registration number");
            pdfTable.addCell("Email");
            pdfTable.addCell("Photo");
            pdfTable.addCell("Faculty");
            pdfTable.addCell("Phone number");
            pdfTable.addCell("Semester");
            pdfTable.addCell("Course");

            //Looping the data from JTable to pdf file
            for (int i=0; i< StudentTable.getRowCount(); i++){
                String fname = StudentTable.getValueAt(i, 0).toString();
                String lname = StudentTable.getValueAt(i, 1).toString();
                String regno = StudentTable.getValueAt(i, 2).toString();
                String email = StudentTable.getValueAt(i, 3).toString();
                String photo = StudentTable.getValueAt(i, 4).toString();
                String faculty = StudentTable.getValueAt(i, 5).toString();
                String phone = StudentTable.getValueAt(i, 6).toString();
                String sem = StudentTable.getValueAt(i, 7).toString();
                String course = StudentTable.getValueAt(i, 8).toString();

                pdfTable.addCell(fname);
                pdfTable.addCell(lname);
                pdfTable.addCell(regno);
                pdfTable.addCell(email);
                pdfTable.addCell(photo);
                pdfTable.addCell(faculty);
                pdfTable.addCell(phone);
                pdfTable.addCell(sem);
                pdfTable.addCell(course);
            }

            doc.add(pdfTable);
            JOptionPane.showMessageDialog(this, "Successfuly exported Pdf Report!!");
            doc.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_studentExportPdfButtonActionPerformed

    private void StudentUploadExcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentUploadExcelButtonActionPerformed
        try {
            //Taking data from the file
            //NOTE: To use this file, please create your own path which contains your own excelsheet.
            FileInputStream file = new FileInputStream(new File("/home/hirwa/NetBeansProjects/Student.M.S.HIBERNATE.v2/excelfile.xlsx"));
            //Creating the workbook.
            XSSFWorkbook workbook = new XSSFWorkbook(file);
            XSSFSheet sheet = workbook.getSheetAt(0);
            Row row;
            for(int i=1; i<sheet.getLastRowNum(); i++){//Points to the starting of excel file. First row
                row = (Row) sheet.getRow(i);//Sheet number

                String firstname;
                if(row.getCell(0)==null) firstname = " ";
                else firstname = row.getCell(0).toString();

                String lastname;
                if(row.getCell(1)== null) lastname = " ";
                else lastname = row.getCell(1).toString();

                String regnumber = null;
                if(row.getCell(2)==null) regnumber = " ";
                else regnumber = row.getCell(2).toString();

                String emailaddress = null;
                if(row.getCell(3)== null) emailaddress = " ";
                else emailaddress = row.getCell(3).toString();

                String photo = null;
                if(row.getCell(4)== null) photo = " ";
                else photo = row.getCell(4).toString();

                String faculty = null;
                if(row.getCell(5)==null) faculty = "null";
                else faculty = row.getCell(5).toString();

                String phonenumber = null;
                if(row.getCell(6)== null) phonenumber = "0";
                else phonenumber = row.getCell(6).toString();

                String semester = null;
                if(row.getCell(7)==null) semester = "1";
                else semester = row.getCell(7).toString();

                String course = null;
                if(row.getCell(8)== null) course = " ";
                else course = row.getCell(8).toString();

                Student st = new Student();

                st.setFirstName(firstname);
                st.setLastName(lastname);
                st.setRegNumber(regnumber);
                st.setEmailAddress(emailaddress);
                st.setPhoto(photo);
                st.setFaculty(faculty);
                st.setPhonenumber(phonenumber);
                st.setSemester(semester);
                st.setCourse(course);

                StudentDao stdo = new StudentDao();
                stdo.importExcelSheet(st);

                updateTable();

                file.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Successfuly Uploaded data!!");
    }//GEN-LAST:event_StudentUploadExcelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrowsePictureButton;
    private javax.swing.JComboBox<String> CourseComboBox;
    private javax.swing.JButton StudentDeleteButton;
    private javax.swing.JButton StudentResetButton;
    private javax.swing.JTable StudentTable;
    private javax.swing.JButton StudentUpdateButton;
    private javax.swing.JButton StudentUploadExcelButton;
    private javax.swing.JTextField emailAddressField;
    private javax.swing.JComboBox<String> facultyComboBox;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JTextField registrationNumberField;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> semesterComboBox;
    private javax.swing.JButton studentExportExcelButton;
    private javax.swing.JButton studentExportPdfButton;
    // End of variables declaration//GEN-END:variables
}
